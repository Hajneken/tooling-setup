{
  "version": 3,
  "sources": ["../src/query-chatgpt-custom-create.tsx"],
  "sourcesContent": ["import * as React from \"react\";\nimport { Action, ActionPanel, Form } from \"@raycast/api\";\nimport { CustomCommandCreateConfigurationParams } from \"./types\";\n\nconst DEEP_LINK = \"raycast://extensions/cyxn/query-chatgpt/query-chatgpt-execute-custom-command\";\n\nfunction composeFullUrl({ prompt, gptUrl, withCustomQuery }: CustomCommandCreateConfigurationParams): string {\n  const args = {\n    prompt: prompt,\n    gptUrl: gptUrl,\n    query: withCustomQuery ? `{Query}` : \"\",\n  };\n\n  let result = encodeURIComponent(JSON.stringify(args));\n  if (!withCustomQuery) {\n    return `${DEEP_LINK}?arguments=${result}`;\n  }\n\n  // Manually replace the `{Query}` placeholder to ensure it is not encoded\n  // Command will be executed both with predefined prompt and additional query provided by user \u2014 each time dynamic\n  result = result.replace(\"%7BQuery%7D\", \"{Query}\");\n\n  return `${DEEP_LINK}?arguments=${result}`;\n}\n\nexport default function Command() {\n  const [gptUrl, setGptUrl]: [string, React.Dispatch<React.SetStateAction<string>>] = React.useState(\"\");\n  const [prompt, setPrompt]: [string, React.Dispatch<React.SetStateAction<string>>] = React.useState(\"\");\n  const [withCustomQuery, setWithCustomQuery]: [boolean, React.Dispatch<React.SetStateAction<boolean>>] =\n    React.useState(true);\n\n  function CustomCreateAction(props: CustomCommandCreateConfigurationParams) {\n    return (\n      <ActionPanel>\n        <Action.CreateQuicklink\n          quicklink={{\n            link: composeFullUrl(props),\n          }}\n        />\n      </ActionPanel>\n    );\n  }\n\n  return (\n    <Form\n      isLoading={false}\n      actions={<CustomCreateAction prompt={prompt} gptUrl={gptUrl} withCustomQuery={withCustomQuery} />}\n    >\n      <Form.TextArea\n        id=\"gptUrl\"\n        title=\"GPT URL\"\n        placeholder=\"Enter GPT URL, e.g. https://chatgpt.com/?model=text-davinci-002-render-sha\"\n        value={gptUrl}\n        onChange={setGptUrl}\n      />\n      <Form.TextArea id=\"prompt\" title=\"Prompt\" placeholder=\"Enter your prompt\" value={prompt} onChange={setPrompt} />\n      <Form.Checkbox\n        label=\"Allow adding additional query when executing the command\"\n        value={withCustomQuery}\n        onChange={setWithCustomQuery}\n        id=\"shouldOpenAfterFinished\"\n      />\n    </Form>\n  );\n}\n"],
  "mappings": "0jBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAAuB,oBACvBC,EAA0C,wBAiClCC,EAAA,6BA9BFC,EAAY,+EAElB,SAASC,EAAe,CAAE,OAAAC,EAAQ,OAAAC,EAAQ,gBAAAC,CAAgB,EAAmD,CAO3G,IAAIC,EAAS,mBAAmB,KAAK,UANxB,CACX,OAAQH,EACR,OAAQC,EACR,MAAOC,EAAkB,UAAY,EACvC,CAEmD,CAAC,EACpD,OAAKA,GAMLC,EAASA,EAAO,QAAQ,cAAe,SAAS,EAEzC,GAAGL,CAAS,cAAcK,CAAM,IAP9B,GAAGL,CAAS,cAAcK,CAAM,EAQ3C,CAEe,SAARV,GAA2B,CAChC,GAAM,CAACQ,EAAQG,CAAS,EAAkE,WAAS,EAAE,EAC/F,CAACJ,EAAQK,CAAS,EAAkE,WAAS,EAAE,EAC/F,CAACH,EAAiBI,CAAkB,EAClC,WAAS,EAAI,EAErB,SAASC,EAAmBC,EAA+C,CACzE,SACE,OAAC,eACC,mBAAC,SAAO,gBAAP,CACC,UAAW,CACT,KAAMT,EAAeS,CAAK,CAC5B,EACF,EACF,CAEJ,CAEA,SACE,QAAC,QACC,UAAW,GACX,WAAS,OAACD,EAAA,CAAmB,OAAQP,EAAQ,OAAQC,EAAQ,gBAAiBC,EAAiB,EAE/F,oBAAC,OAAK,SAAL,CACC,GAAG,SACH,MAAM,UACN,YAAY,6EACZ,MAAOD,EACP,SAAUG,EACZ,KACA,OAAC,OAAK,SAAL,CAAc,GAAG,SAAS,MAAM,SAAS,YAAY,oBAAoB,MAAOJ,EAAQ,SAAUK,EAAW,KAC9G,OAAC,OAAK,SAAL,CACC,MAAM,2DACN,MAAOH,EACP,SAAUI,EACV,GAAG,0BACL,GACF,CAEJ",
  "names": ["query_chatgpt_custom_create_exports", "__export", "Command", "__toCommonJS", "React", "import_api", "import_jsx_runtime", "DEEP_LINK", "composeFullUrl", "prompt", "gptUrl", "withCustomQuery", "result", "setGptUrl", "setPrompt", "setWithCustomQuery", "CustomCreateAction", "props"]
}
